<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[0xklx]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://k-research.net/"/>
  <updated>2014-11-21T06:57:10.761Z</updated>
  <id>http://k-research.net/</id>
  
  <author>
    <name><![CDATA[Kong Luoxing]]></name>
    <email><![CDATA[kong.luoxing@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[数据中心服务器生命周期管理]]></title>
    <link href="http://k-research.net/2014/11/18/lifecycle-management/"/>
    <id>http://k-research.net/2014/11/18/lifecycle-management/</id>
    <published>2014-11-18T07:30:22.000Z</published>
    <updated>2014-11-21T06:44:30.000Z</updated>
    <content type="html"><![CDATA[<p>英文标题：Data Center Server Lifecycle Management</p>
<p>首先我定义生命周期包含几个阶段：服务开通-&gt;交付、维护-&gt;下架<br>这里所指的服务开通，指的是服务器从上架到交付使用的全过程。</p>
<h1 id="概述">概述</h1>
<p>服务开通由几个步骤组成：上架-&gt;初始配置-&gt;信息登记-&gt;自动装机-&gt;交付。<br><strong> 上架 </strong>指专门人员（通常指<a href="http://beijing.myjob.com/job/11-15240822.html" target="_blank" rel="external">Siteops</a>）将指定设备放置到指定机架位置上，并加电，连接好网线；<br><strong> 初始配置 </strong>指配置带外管理IP，以及用户密码等；<br><strong> 信息登记 </strong>指扫描RFID，并录入以上两部实际完成内容。此步骤完成后，设备已完成纳管，应在CMDB中保存有足够的信息来识别和定位该设备；<br><strong> 自动装机 </strong>指自动将操作系统部署到目标设备上，并进行初始化，如网络设置，磁盘分配等，这也是整个流程中最为重要的部分；<br><strong> 交付 </strong>指交付业务系统进行最后的配置，此时系统已经可以使用；</p>
<a id="more"></a>

<p>网络拓扑：</p>
<p><img src="http://kongluoxing.qiniudn.com/datacenter-lifecycle-topology.png" alt="网络拓扑"></p>
<p><strong> 图解 </strong><br>所有服务器都同时连接到管理网和生产网，其中管理口连接到管理网，普通网口连接到生产网，流量分开互不干扰；管理网和生产网亦不共享网络设备，<br>以保证在生产网故障需要维护时，管理网仍然可用。</p>
<h2 id="各阶段定义">各阶段定义</h2>
<p><img src="http://kongluoxing.qiniudn.com/oob_management_summary.png" alt="总体逻辑图"><br><a id="more"></a><br>机器从上架到交付用户使用后的维护，总体分为三个阶段：</p>
<ol>
<li><strong> 上架 </strong><br>上架阶段主要完成机器上架、加电、扫描录入RFID、位置信息、扫描录入序列号、扫描录入MAC地址、网络准备等。<br>其中RFID储存CI ID，扫描到的序列号和UUID, MAC地址关联到此CI；<br>网络准备需要准备两个链路：管理网、生产网。其中管理网用于带外管理，生产网络在执行自动装机时连接管理网，在装机完成后即划回生产网（此处要求网络有动态调整能力）。</li>
<li><strong> 纳管 </strong><br>此阶段主要是处理上架时的信息，使相关的信息进行关联，形成完整的管理信息以便机器纳管。上架阶段完成时，由于扫描信息的人员，和设置管理IP地址的可能并不是相同的人，因此需要在这个阶段进行匹配关联，方法是通过管理口采集生产网卡MAC的地址，通过采集到的MAC地址与上架阶段录入的MAC地址进行匹配，然后将管理口IP，管理口MAC，与CI ID，序列号等关联起来，使机器具备纳管条件。</li>
<li><strong> 维护 </strong><br>维护阶段已经可以进行各种带外管理，其中包括控制和监控两部分：<ul>
<li>控制：可以执行远程自动装机、远程启停、控制台重定向、BIOS设置等功能。<br>远程自动装机可以对目标机器安装指定操作系统，指定分区、网络设置、预装的软件包等，可根据业务系统要求定制安装。<br>控制台重定向可以模拟串口，可实现从机器启动到操作系统启动之间的操作，弥补了以往操作系统出问题只能到现场解决的问题。若对操作系统设置启动参数，还可实现登陆操作系统的功能，可以在操作系统ssh无法连接时提供另一种手段。</li>
<li>监控：带外监控部分用于弥补在操作系统层面无法采集的信息：功耗、温度、风扇转速、硬件告警等。</li>
</ul>
</li>
</ol>
<h2 id="前提条件">前提条件</h2>
<p>要实现完全的服务开通自动化，需要满足以下前提条件：<br>设备需支持IPMI 1.5或IPMI 2.0规范并带有独立带外管理网口以实现带外管理；<br>设备需支持PXE以实现网络启动；<br>设备需同时连接到管理网和生产网；<br>设备所安装系统应当是完全兼容的，不能有缺少驱动等情况；<br>在大规模部署中，应在各子网设DHCP中继；</p>
<h1 id="技术实现">技术实现</h1>
<p>为应对数据中心的大量设备的自动化需求，系统采用的实现方案详细如下:  </p>
<h2 id="组件及其关联">组件及其关联</h2>
<p>系统由以下组件组成：<br><strong> 装机服务器 </strong>是提供自动装机服务的主要服务器，其提供镜像、安装文件分发、设备管理（包括分类管理、规则设置等）等功能；<br><strong> DHCP服务器 </strong>是专门用于给目标机器自动分配IP地址的服务器，因冲突域的限制，需要在各子网设DHCP中继才能实现多子网的DHCP功能；<br><strong> 控制服务器 </strong>是用来收集整理装机服务器的信息，给装机服务器分派指令，与ITSM系统通信等的服务器；<br><strong> ITSM服务器 </strong>指现有ITSM系统。</p>
<h2 id="体系结构">体系结构</h2>
<h3 id="主机对象">主机对象</h3>
<p>一个主机对象的基本信息包括：</p>
<ul>
<li>name：多数时候是系统自动命名的，如node1，node2等，用于方便辨识，但不可作为唯一定位的条件</li>
<li>dhcp_mac：dhcp识别到的MAC地址，也就是连接的生产网口的MAC地址</li>
<li>state：标识是否已安装操作系统</li>
<li>last_checkin：最后一次向服务器汇报状态的时间，参见自动发现的描述</li>
<li>tags：一系列用于将机器归类和方便过滤的标签，例如virtual字段为vmware时，自动添加vmware标签，或者自动将机器的MAC地址作为它的标签</li>
</ul>
<p>此外，被自动发现后，主机将自动上传各种硬件配置信息，这些信息也会保存在主机对象中，详见自动发现章节；对主机对象所做的任何操作，例如开机，都会在主机对象上留下一条日志。</p>
<h3 id="策略">策略</h3>
<p>策略定义了如何给一台或一组服务器安装操作系统，它整合了所有与装机有关的信息，其中包括：</p>
<ul>
<li>仓库(repo)：仓库有两种，一种是存在本地的ISO，另一种是镜像URL，例如163镜像</li>
<li>任务(task)：任务指定了安装何种操作系统，以及安装所用的脚本等</li>
<li>代理(broker)：代理是在操作系统安装完成后所执行的，其作用是安装配置管理系统，如puppet，salt</li>
<li>标签(tags)：策略的执行，是依靠匹配标签来进行的，因此这是一个正则表达式，被这个正则匹配到标签的服务器，将会执行装机任务</li>
<li>其他信息(Misc. info)：例如主机名,root密码等</li>
</ul>
<p>一个策略可以以json的形式存放在磁盘上：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">    "<span class="attribute">name</span>": <span class="value"><span class="string">"centos-for-small"</span></span>,</div><div class="line">    "<span class="attribute">repo</span>": <span class="value"><span class="string">"centos-6.4"</span></span>,</div><div class="line">    "<span class="attribute">task</span>": <span class="value"><span class="string">"centos"</span></span>,</div><div class="line">    "<span class="attribute">broker</span>": <span class="value"><span class="string">"noop"</span></span>,</div><div class="line">    "<span class="attribute">enabled</span>": <span class="value"><span class="literal">true</span></span>,</div><div class="line">    "<span class="attribute">hostname</span>": <span class="value"><span class="string">"host${id}.example.com"</span></span>,</div><div class="line">    "<span class="attribute">root_password</span>": <span class="value"><span class="string">"secret"</span></span>,</div><div class="line">    "<span class="attribute">max_count</span>": <span class="value"><span class="number">20</span></span>,</div><div class="line">    "<span class="attribute">tags</span>": <span class="value">[<span class="string">"small"</span>]</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="流程">流程</h3>
<p>一台机器从启动到被发现到装机的流程如下：<br><img src="http://kongluoxing.qiniudn.com/provisioning_procedure.png" alt="流程"><br>其中开机可通过结合带外管理来远程实现，以实现全流程的自动化。</p>
<h2 id="自动发现">自动发现</h2>
<p>自动发现的实现机制是，当新上架机器启动后，自动通过PXE连接到装机服务器，然后通过网络启动一个定制的操作系统（microkernel），该操作系统使用最新内核编译，使其能够识别绝大部分硬件，操作系统完全运行在内存中，使其不需要占用硬盘空间，同时它自带一个报告程序，用于定时向装机服务器汇报自身情况，例如：各网卡MAC地址、服务器UUID、是否虚拟化、CPU配置、内存配置、序列号等等。当装机服务器收到数据后，自动将此机器置为已登记状态，ITSM提供界面将发现的机器与在信息登记阶段登记的机器进行关联，此时，机器就具备了完整的配置信息，带内带外的信息以及机房位置信息也全部关联补齐。</p>
<h2 id="自动装机">自动装机</h2>
<p>Note：自动装机使用的是pupppetlabs和EMC共同开发的razor，它是开源的，同时也是Puppet Enterprise中的一部分，但其状态还是开发预览版。<br>自动装机支持主流Linux和Windows，Linux主要是通过红帽的kickstart来实现，可定制磁盘分配策略、网络配置、root密码、安装的软件包等等，同时也支持windows 2012的安装。</p>
<h3 id="针对单一机器的装机流程">针对单一机器的装机流程</h3>
<p>当需要对单一机器进行装机时，创建tag规则，将机器的MAC地址作为一个tag，然后创建一个policy，匹配该tag，当policy创建完成后，机器会立即被重启，此时机器通过网络启动，进入boot_install阶段，然后连接到装机服务器下载镜像进行自动安装，装机完成后，将主机对象的state字段标记为已安装操作系统（installed），在此以后，机器重启将不会再进入boot_install，而会进入到boot_local启动本地硬盘上的操作系统。</p>
<h3 id="批量装机">批量装机</h3>
<p>与单台机器装机唯一不同的是，这批机器需要有一个相同且唯一的tag，可以以日期加序号作为tag，其余与单一机器装机相同。</p>
<h2 id="重装系统">重装系统</h2>
<p>重装系统将删除与该节点关联的策略然后清除installed标记，完成后将机器重启，机器将被重启进microkernel，上传自身信息，然后重新被自动发现，被打上标签和应用策略，最终被重装。</p>
<h2 id="IPMI集成">IPMI集成</h2>
<p>通过IPMI实现机器的启停，设置BIOS启动顺序等。</p>
<h2 id="集中配置管理集成">集中配置管理集成</h2>
<p>通过代理（broker）安装集中配置管理工具，安装完成后，即可实现软件统一安装、升级，多机批量操作等功能。</p>
]]></content>
    <summary type="html">
    <![CDATA[从上架到服务开通到下架，全面描述了数据中心中服务器的生命周期管理。]]>
    
    </summary>
    
      <category term="provisioning" scheme="http://k-research.net/tags/provisioning/"/>
    
      <category term="lifecycle" scheme="http://k-research.net/tags/lifecycle/"/>
    
      <category term="out-of-band" scheme="http://k-research.net/tags/out-of-band/"/>
    
      <category term="datacenter" scheme="http://k-research.net/tags/datacenter/"/>
    
      <category term="razor" scheme="http://k-research.net/tags/razor/"/>
    
      <category term="Provisioning" scheme="http://k-research.net/categories/Provisioning/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[数据中心服务器自动交付及带外管理]]></title>
    <link href="http://k-research.net/2014/11/12/out-of-band-management/"/>
    <id>http://k-research.net/2014/11/12/out-of-band-management/</id>
    <published>2014-11-12T01:07:31.000Z</published>
    <updated>2014-11-18T09:06:28.000Z</updated>
    <content type="html"><![CDATA[<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  <p>本文介绍了数据中心自动装机以及带外管理等的设想。</p>
</div>

<h1 id="总体构思">总体构思</h1>
<p><img src="http://kongluoxing.qiniudn.com/oob_management_summary.png" alt="总体逻辑图"><br><a id="more"></a><br>机器从上架到交付用户使用后的维护，总体分为三个阶段：</p>
<ol>
<li><strong> 上架 </strong><br>上架阶段主要完成机器上架、加电、扫描录入RFID、位置信息、扫描录入序列号、扫描录入MAC地址、网络准备等。<br>其中RFID储存CI ID，扫描到的序列号和UUID, MAC地址关联到此CI；<br>网络准备需要准备两个链路：管理网、生产网。其中管理网用于带外管理，生产网络在执行自动装机时连接管理网，在装机完成后即划回生产网（此处要求网络有动态调整能力）。</li>
<li><strong> 纳管 </strong><br>此阶段主要是处理上架时的信息，使相关的信息进行关联，形成完整的管理信息以便机器纳管。上架阶段完成时，由于扫描信息的人员，和设置管理IP地址的可能并不是相同的人，因此需要在这个阶段进行匹配关联，方法是通过管理口采集生产网卡MAC的地址，通过采集到的MAC地址与上架阶段录入的MAC地址进行匹配，然后将管理口IP，管理口MAC，与CI ID，序列号等关联起来，使机器具备纳管条件。</li>
<li><strong> 维护 </strong><br>维护阶段已经可以进行各种带外管理，其中包括控制和监控两部分：<ul>
<li>控制：可以执行远程自动装机、远程启停、控制台重定向、BIOS设置等功能。<br>远程自动装机可以对目标机器安装指定操作系统，指定分区、网络设置、预装的软件包等，可根据业务系统要求定制安装。<br>控制台重定向可以模拟串口，可实现从机器启动到操作系统启动之间的操作，弥补了以往操作系统出问题只能到现场解决的问题。若对操作系统设置启动参数，还可实现登陆操作系统的功能，可以在操作系统ssh无法连接时提供另一种手段。</li>
<li>监控：带外监控部分用于弥补在操作系统层面无法采集的信息：功耗、温度、风扇转速、硬件告警等。</li>
</ul>
</li>
</ol>
<h1 id="重点功能描述">重点功能描述</h1>
<h2 id="网络拓扑">网络拓扑</h2>
<p>维护期网络拓扑如下：<br>其中红色连线为装机网络，只在装机时使用，维护期不使用<br><img src="http://kongluoxing.qiniudn.com/datacenter_oob_maintance.png" alt="维护期网络拓扑"><br>装机时的网络拓扑，其中红色连线为装机时网络流量流向<br><img src="http://kongluoxing.qiniudn.com/datacenter_oob_install.png" alt="装机时拓扑">  </p>
<p>其中为了让各生产子网可以顺利通过DHCP得到ip地址，需要在各交换机上开启DHCP中继(待求证可行性)。  </p>
<h2 id="自动装机">自动装机</h2>
<p>自动装机的实现，主要借助于几个开放标准的技术：PXE, DHCP, tftp，bootp，kickstart。<br>自动装机使用puppet公司的razor-server实现，支持各种Linux发行版和windows<br>业界常把自动装机称作Baremetal provitioning automation</p>
<h2 id="自动发现">自动发现</h2>
<p>tip:<br>dmidecod可以采到uuid<br>序列号可能会重</p>
<p>编配（orchestration）<br>服务开通(provisioning)<br>动态数据中心(dynamic datacenter)</p>
]]></content>
    <summary type="html">
    <![CDATA[<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  <p>本文介绍了数据中心自动装机以及带外管理等的设想。</p>
</div>

<h1 id="总体构思">总体构思</h1>
<p><img src="http://kongluoxing.qiniudn.com/oob_management_summary.png" alt="总体逻辑图"><br>]]>
    
    </summary>
    
      <category term="IPMI" scheme="http://k-research.net/tags/IPMI/"/>
    
      <category term="PXE" scheme="http://k-research.net/tags/PXE/"/>
    
      <category term="DHCP" scheme="http://k-research.net/tags/DHCP/"/>
    
      <category term="Linux" scheme="http://k-research.net/tags/Linux/"/>
    
      <category term="Cobbler" scheme="http://k-research.net/tags/Cobbler/"/>
    
      <category term="oob" scheme="http://k-research.net/tags/oob/"/>
    
      <category term="DataCenter" scheme="http://k-research.net/tags/DataCenter/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ipmi笔记]]></title>
    <link href="http://k-research.net/2014/11/11/ipmi/"/>
    <id>http://k-research.net/2014/11/11/ipmi/</id>
    <published>2014-11-11T14:26:42.000Z</published>
    <updated>2014-11-12T08:40:16.000Z</updated>
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1>
<p>wikipedia上是这么介绍ipmi的：<br>The Intelligent Platform Management Interface (IPMI) is a set of computer interface specifications for an autonomous computer subsystem that provides management and monitoring capabilities independently of the host system’s CPU, firmware (BIOS or UEFI) and operating system. IPMI defines a set of interfaces used by system administrators for out-of-band management of computer systems and monitoring of their operation. For example, IPMI provides a way to manage a computer that may be powered off or otherwise unresponsive by using a network connection to the hardware rather than to an operating system or login shell.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="介绍">介绍</h1>
<p>wikipedia上是这么介绍ipmi的：<br>The Intelligent Platform Management Interface (IPMI) is a set of computer interface specific]]>
    </summary>
    
      <category term="IPMI" scheme="http://k-research.net/tags/IPMI/"/>
    
      <category term="Linux" scheme="http://k-research.net/tags/Linux/"/>
    
      <category term="Dell" scheme="http://k-research.net/tags/Dell/"/>
    
  </entry>
  
</feed>
